"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
my_num = int(input('Введите число: '))

def num_count(my_num, even_count = 0, odd_count = 0):

    if not my_num:
        return even_count, odd_count
    if my_num % 10 % 2 == 1:
        odd_count += 1
    else:
        even_count +=1
    return num_count(my_num // 10, even_count, odd_count)
print(f'В числе {my_num} содержится четных и нечетных чисел соответственно: '
      f'{num_count(my_num)}')